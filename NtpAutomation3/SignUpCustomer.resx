<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGQAAABkCAYAAABw4pVUAAAABGdBTUEAALGPC/xhBQAABsRJREFUeF7t
        nFlsVFUYxxvU+KJxRQ1L585t6bS9M12oGCiUDi0WulNa6vZiTIpKTFBCQBIwJCpWkKo1sgRlMeGFB1FL
        iLjxQKIR3J/k1RhNfHBBH4gGjud/+9323Jk7d9rOcs8M3y/5J5Np75nvfv85+7lTwjAMwzAMwzAMwzAM
        wzAMwzAMwzDXLOXl9bND4egXobD1OV7T20wQzJ8fmSONuCglSBfxHv2ZySeoDUbY+gFGRJYut4XXeI9r
        Sp5Ra0ZVvEX0njooej44ICqbmrmm5BsvM9aePWaLTckzqhmVTXHRM7Z/wgw2Jc8kmSETn2iGIzYlxyR2
        4N3v7fM0QlX3yTdFZEmTbYq89jwVxWSKnxl9nxwR9Q8OiPjwsy4zoJ4xWUuaV9iGlIatL6k4JhP8mqk1
        H70tYr3dYuEjg6Lv06MuM+za0ThZOwyj7lYqkpkpGZlBTZXUBTYjC7jNaGYzgoTN0Ag/M6DmF7eIugf6
        pRlHXO8nmPFVaWnsNiqSmSnpzEglNiMHZMmM7+dUVNxJRTIzJRMzKhaPm8ErvFnCzwy/SR+bkQNcM3A5
        iUOSnYSvOSNHUz1dYuHD65JGU1B16/1OMxWEfofk7P8nqTPy9d6QGV07b551O91a4eFnBlTb32cLtUR9
        31G0fbVXooLWFalz0qT1BTXkTmcG1Pz8ZmnG4aT3dRD2X6DOE6+L1tHnROOWDaJGzo3CVfWqOZekdhuG
        dQ/dtp64zJCjIy8zClV9Hx8WLa9sF7V9vcIwo5PGmNamknj8ekqBPviZgaapLkUHXohqP75X1A32qzUG
        8yOTUqEHMqgLXmZA6fqMQtXKN3aKivsax00xrT9DZlUHpSN4ZO04j8CwD96j7INDOvcZmar39CFRN9Dn
        1JT/5IjsMUpJsKhNlm3K2NQmgMWixU+vd0y5Kjv7RyktwaKagt28a82Uph0bHVP+laasprQEC8boTvOV
        athbzGrc/KRjyt+hULSK0hIs6WpK/KWtov4hzNK9O/lYZ6dzU3lXWc0iUbksLmJdnWLJM4+L9mN7PGNM
        qc+OitqBNePlmdGvGxoabqC0BIvLlOUwZfKMFZZLsAmFzSiM7103JBXw0kmSMHKM795mJzsxVi+ho1dG
        X5soJcEzU1OwCIlvKSXkm7lzK++gInMOlvjR1Mg+YFXIsPbJz/+V4hDVLa32DF6NNZVWju504r8UDkfv
        puKDx2VKwmlEf1P2B2aKCpocw4g+Ib/pPyOWsti9ou3AC65YUwlzr/H4q/dQcXqQkSlLJ04ofhuUKWC2
        Zd0k+4STiMUorxFtB9Obgv5HXoPY/wkydk+STFH3RvxMeX+fNqZIZhmm9RpiQU3pPDHqitVLse4uJ/an
        qAx9cJuSsGE1dVO+C3grd5aMYQyxWCvb0nb0K17eZset7enKTExxHtqRCtQU02y4RcbwC2LBCrAaZ6Kw
        GReurEPMV8vKau6iIvRipqbg3K9iSqCHHuQ3fsiOX9ZcNUYvYU6D/y0NVw/S5frhMkWOptCBOzeQ1hQ6
        1wtTUA4VmWfWXYdtXsTR/o7/5HFi9m5YI3SxnqjLLDjU0PWusofi13xhniJrFpnyIw5TUJF5JRSOjiKG
        xRuHXPElquXVHeOxmtZpulRfXDVFVn9XTcHJlMG1onnXVtcNQlgjc85swVQqLq9g/wOfH23vSIpPVcfx
        EefLc5Eu1Rs/U1JJh+dDDCNWic9HE+oVoyPUaDLkN7pUf9zN1zJX85WoxNoR1CmQSCRyM2LAAQivOB2h
        ySVDLtOlhUFSTZFD3cSbU/sP/G9wnfo1YAjwqyl4rZxoDPzJqaJuslS8aoo6Ww+6ZjiEzGgn4im6Tt0L
        1RRMBp0JoS5mgFKzej9iwn66lxGOWke2O4acoksLE9UU3czAsryMyV4+KZqJ4VQgU85jaKuLGUBO8jYg
        yWhGvUxQ5WxJy3sYoMuZbEKLi/ZOYrrFxd4P3xLhSC0MucIPHOWGaS2/40AH/lfqHF3PZJHpb1BNrPRa
        Q1QGkw0y3ML9C80cFcVkQjYOOchaNUzFMdOlvLz8RjxaULTHgHRBJuask9jpqmgOyulEYpJTyVhQY6+h
        xTo6iusoqW44CfdMYhaF3UP6rD+0e6pKJ/JhiJaPI+hKrg3R8oEdncmVIdgWUB6fuCw78X76SMaPXBiC
        0yQLFtFoSvYZWj30qTvZNKTt0K6JJRGSfo9F606mhuDX7uLDW4W1yvWzH/r+cIDuTMcQTOyK4qc1dEZJ
        5kxVmD8+oytIppLcdLokE188P8/EMAzDMAzDMAzDMAzDMAzDMAzDMFOnpOR/9a1Y+QeMylAAAAAASUVO
        RK5CYII=
</value>
  </data>
</root>