<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        WPkHjMpQAAAAAElFTkSuQmCC
</value>
  </data>
</root>